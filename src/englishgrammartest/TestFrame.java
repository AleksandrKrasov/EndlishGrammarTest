/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package englishgrammartest;

import java.io.FileNotFoundException;
import javax.swing.JOptionPane;

/**
 *
 * @author Саня
 */
public class TestFrame extends javax.swing.JFrame {
    
    private GrammarQuestionList grammar;
    private int questionCounter;
    private int rightAnswers;
    
    /**
     * Creates new form TestFrame
     * @param qRoot
     * @param aRoot
     */
    public TestFrame(String qRoot,String aRoot) {
        try {
            questionCounter = 0;
            rightAnswers = 0;
            grammar = new GrammarQuestionList();
            grammar.fill(qRoot, aRoot);
            initComponents();
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Файл с вопросами не найден");
            System.exit(0);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText(grammar.getQuestions().get(questionCounter));

        jButton1.setText("Далее");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jCheckBox1.setText(grammar.getAnswers()[questionCounter][0]);
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setText(grammar.getAnswers()[questionCounter][1]);
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jCheckBox3.setText(grammar.getAnswers()[questionCounter][2]);
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jCheckBox2, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                    .addComponent(jCheckBox1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(286, 286, 286))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCheckBox3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(97, 97, 97)
                        .addComponent(jButton1)
                        .addGap(58, 58, 58)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(4, 4, 4)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox3)
                    .addComponent(jButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(questionCounter == 0)
            questionCounter ++;
        //System.out.println(grammar.getQuestions().size() + " " + questionCounter );
        if(questionCounter  < grammar.getQuestions().size()){
            jLabel1.setText(grammar.getQuestions().get(questionCounter));
            jCheckBox2.setText(grammar.getAnswers()[questionCounter][1]);
            jCheckBox3.setText(grammar.getAnswers()[questionCounter][2]);
            jCheckBox1.setText(grammar.getAnswers()[questionCounter][0]);
            
            //System.out.println(jCheckBox1.isSelected());
            //System.out.println(jCheckBox2.isSelected());
            //System.out.println(jCheckBox3.isSelected());
            if(jCheckBox1.isSelected() && 1 == grammar.getAnswerIndex()[questionCounter-1])
                rightAnswers ++;
            else if(jCheckBox2.isSelected() && 2 == grammar.getAnswerIndex()[questionCounter-1])
                rightAnswers ++;
            else if(jCheckBox3.isSelected() && 3 == grammar.getAnswerIndex()[questionCounter-1])
                rightAnswers ++;
            //System.out.println(rightAnswers);
            jCheckBox2.setSelected(false);
            jCheckBox3.setSelected(false);
            jCheckBox1.setSelected(false);
            questionCounter ++;
        }
        else if(questionCounter  == grammar.getQuestions().size()){
            jLabel1.setText(grammar.getQuestions().get(questionCounter-1));
            jCheckBox2.setText(grammar.getAnswers()[questionCounter-1][1]);
            jCheckBox3.setText(grammar.getAnswers()[questionCounter-1][2]);
            jCheckBox1.setText(grammar.getAnswers()[questionCounter-1][0]);
            
            //System.out.println(jCheckBox1.isSelected());
            //System.out.println(jCheckBox2.isSelected());
            //System.out.println(jCheckBox3.isSelected());
            if(jCheckBox1.isSelected() && 1 == grammar.getAnswerIndex()[questionCounter-1])
                rightAnswers ++;
            else if(jCheckBox2.isSelected() && 2 == grammar.getAnswerIndex()[questionCounter-1])
                rightAnswers ++;
            else if(jCheckBox3.isSelected() && 3 == grammar.getAnswerIndex()[questionCounter-1])
                rightAnswers ++;
        
        
            JOptionPane.showMessageDialog(null, "Тест завершен. Правильных ответов: " 
                    + rightAnswers + "/" + questionCounter);
            //dispose();
        }
            
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        jCheckBox2.setSelected(false);
        jCheckBox3.setSelected(false);
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        jCheckBox1.setSelected(false);
        jCheckBox3.setSelected(false);
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        jCheckBox2.setSelected(false);
        jCheckBox1.setSelected(false);
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    public GrammarQuestionList getGrammar() {
        return grammar;
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
